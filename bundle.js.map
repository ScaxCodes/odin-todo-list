{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACzBsC;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,+CAAQ,QAAQ,0CAA0C;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,+CAAQ,wDAAwD,+CAAQ;AAClG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+CAAQ;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,IAAI,+CAAQ,SAAS;AACzC,qCAAqC,+CAAQ,SAAS,IAAI,+CAAQ,SAAS;AAC3E;;AAEA;AACA;;AAEA;;;;;;;;UC/FA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN+E;AACV;;AAErE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,uDAAW;AACnB;AACA;AACA,CAAC;;AAED;AACA,IAAI,+CAAQ;AACZ,QAAQ,sDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAQ;AACxB;;AAEA,oDAAQ;;AAER,YAAY,+CAAQ,E","sources":["webpack://odin-todo-list/./src/appLogic.js","webpack://odin-todo-list/./src/domLoader.js","webpack://odin-todo-list/webpack/bootstrap","webpack://odin-todo-list/webpack/runtime/define property getters","webpack://odin-todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://odin-todo-list/webpack/runtime/make namespace object","webpack://odin-todo-list/./src/index.js"],"sourcesContent":["const projects = []\n\nprojects[0] = {\n    name: \"Default Project\",\n    todos: [],\n}\n\nconst todoFactory = (title, description, dueDate, priority) => {\n    // const showTitle = () => console.log(title);\n    console.log(\"Todo added...\");\n    return { title, description, dueDate, priority }\n}\n\nconst deleteTodo = (projectIndex, todoIndex) => {\n    projects[projectIndex].todos.splice(todoIndex, 1);\n    console.log(\"Todo deleted...\");\n    return projects[projectIndex];\n}\n\nconst changePriority = (projectIndex, todoIndex, priority) => {\n    projects[projectIndex].todos[todoIndex].priority = priority;\n    console.log(\"Priority has been changed...\");\n    return projects[projectIndex];\n}\n\nconsole.log(\"appLogic.js has been executed\");\n\nexport { todoFactory, deleteTodo, changePriority, projects };","import { projects } from \"./appLogic\";\n\nlet addProjectButton = document.querySelector(\".sidebar button\");\n// let addTodoButton = document.querySelector(\".todo-box button\");\nlet sidebar = document.querySelector(\".sidebar\");\nlet sidebarList = document.querySelector(\".sidebar ul\")\nlet todoList = document.querySelector(\".todo-list ul\");\n\nlet projectField = document.querySelector(\"#project\");\nlet titleField = document.querySelector(\"#title\");\nlet descriptionField = document.querySelector(\"#description\");\nlet dueDateField = document.querySelector(\"#due-date\");\nlet priorityField = document.querySelector(\"#priority\");\n\n// function selectElementsAgain() {\n//     addProjectButton = document.querySelector(\".sidebar button\");\n//     addTodoButton = document.querySelector(\".todo-box button\");\n//     sidebar = document.querySelector(\".sidebar\");\n//     todoList = document.querySelector(\".todo-list\");\n//     console.log(\"Elements again selected...\");\n// }\n\nfunction addListeners() {\n    addProjectButton.addEventListener(\"click\", addProject);\n    // addTodoButton.addEventListener(\"click\", addTodo);\n    console.log(\"Event listeners added...\");\n}\n\nfunction initPage() {\n    // selectElementsAgain();\n    addListeners();\n    renderDropdownMenu();\n    console.log(\"Page initialized...\");\n}\n\nfunction addProject() {\n    const newProject = document.createElement(\"li\");\n    sidebarList.appendChild(newProject);\n    newProject.textContent = prompt(\"Enter project name\");\n    projects.push({ name: newProject.textContent, todos: [], });\n    renderDropdownMenu();\n    console.log(\"Project added...\");\n}\n\nfunction displayTodo() {\n    const newTodo = document.createElement(\"li\");\n    todoList.appendChild(newTodo);\n    newTodo.textContent = projects[0].todos[getTodoLength() - 1].title + \", due Date: \" + projects[0].todos[getTodoLength() - 1].dueDate;\n    addDeleteButton(newTodo);\n    todoAddListener(newTodo);\n    clearForm();\n}\n\nfunction todoAddListener(newTodo) {\n    newTodo.addEventListener(\"click\", () => {\n        newTodo.innerHTML += \"Helloooooo\";\n    });\n}\n\nfunction addDeleteButton(newTodo) {\n    newTodo.innerHTML += \" \" + `<button class=\"delete\">x</button>`;\n}\n\nfunction getTodoLength() {\n    return projects[0].todos.length;\n}\n\nfunction allFieldsFilled() {\n    if (titleField.value && descriptionField.value && dueDateField.value && priorityField.value) return true;\n    else false;\n}\n\nfunction getInputs() {\n    return { projectField, titleField, descriptionField, dueDateField, priorityField };\n}\n\nfunction clearForm() {\n    titleField.value = \"\";\n    descriptionField.value = \"\";\n    dueDateField.value = \"\";\n    priorityField.value = \"\";\n    console.log(\"Fields cleared...\")\n}\n\nfunction renderDropdownMenu() {\n    const selectElement = document.querySelector(\"select\");\n    let options = \"\";\n\n    for (let i = 0; i < projects.length; i++) {\n        options += `<option value=\"${projects[i].name}\">${projects[i].name}</option>`\n    }\n\n    selectElement.innerHTML = options;\n}\n\nconsole.log(\"domLoader.js has been executed\");\n\nexport { initPage, getInputs, displayTodo, allFieldsFilled };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { todoFactory, deleteTodo, changePriority, projects } from \"./appLogic\";\nimport { initPage, displayTodo, allFieldsFilled } from \"./domLoader\";\n\nlet addProjectButton = document.querySelector(\".sidebar button\");\nlet addTodoButton = document.querySelector(\".todo-box button\");\nlet sidebar = document.querySelector(\".sidebar\");\nlet sidebarList = document.querySelector(\".sidebar ul\")\nlet todoList = document.querySelector(\".todo-list ul\");\n\nlet projectField = document.querySelector(\"#project\");\nlet titleField = document.querySelector(\"#title\");\nlet descriptionField = document.querySelector(\"#description\");\nlet dueDateField = document.querySelector(\"#due-date\");\nlet priorityField = document.querySelector(\"#priority\");\n\naddTodoButton.addEventListener(\"click\", () => {\n    // if (allFieldsFilled()) {\n        createTodo();\n        displayTodo();\n    // }\n    // else alert(\"Please fill all fields to add a todo!\");\n});\n\nfunction createTodo() {\n    projects[0].todos.push(\n        todoFactory(\n            titleField.value,\n            descriptionField.value,\n            dueDateField.value,\n            priorityField.value\n        )\n    );\n    console.log(projects[0]);\n}\n\ninitPage();\n\nconsole.log(projects);"],"names":[],"sourceRoot":""}